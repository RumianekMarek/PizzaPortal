{"version":3,"sources":["redux/productRedux.js","redux/store.js","redux/globalRedux.js","components/layout/Header/Header.js","components/layout/MainLayout/MainLayout.js","components/views/Home/Home.js","components/views/Login/Login.js","components/views/Tables/Tables.js","components/views/BookedTable/BookedTable.js","components/views/BookedEvent/BookedEvent.js","components/views/OrderForm/OrderForm.js","components/views/CreateOrder/CreateOrder.js","components/views/TableOrder/TableOrder.js","components/views/Kitchen/Kitchen.js","App.js","index.js"],"names":["createActionName","name","FETCH_ALL_START","FETCH_ALL_SUCCESS","FETCH_ALL_ERROR","initialState","products","loading","active","error","data","reducers","statePart","action","type","payload","Object","keys","forEach","item","combinedReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Header","className","styles","component","between","middle","md","lg","to","logo","process","activeClassName","contact","React","Component","MainLayout","children","Home","Login","Typography","variant","color","align","Link","href","Date","getFullYear","classes","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Container","maxWidth","h2","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","value","Button","Grid","container","xs","Box","mt","Copyright","Tables","root","flexGrow","padding","textAlign","text","Paper","BookedTable","this","props","match","params","BookedEvent","JSON","stringify","People","Appetizers","MainDish","Beverages","Alkohol","OrderForm","formControl","minWidth","selectEmpty","componnet","FormControl","InputLabel","Select","MenuItem","CreateOrder","TableOrder","Kitchen","SET_MULTIPLE_STATES","App","exact","path","connect","dispatch","setStates","newState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a9b8a1b.chunk.js","sourcesContent":["/* selectors */\r\nexport const getAllProducts = ({products}) => products.data;\r\nexport const getProductsLoadingState = ({products}) => products.loading;\r\n\r\n/* action name creator */\r\nconst reducerName = 'products';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* action types */\r\nconst FETCH_ALL_START = createActionName('FETCH_ALL_START');\r\nconst FETCH_ALL_SUCCESS = createActionName('FETCH_ALL_SUCCESS');\r\nconst FETCH_ALL_ERROR = createActionName('FETCH_ALL_ERROR');\r\n\r\n/* action creators */\r\nexport const fetchProductsStarted = payload => ({ payload, type: FETCH_ALL_START });\r\nexport const fetchProductsSuccess = payload => ({ payload, type: FETCH_ALL_SUCCESS });\r\nexport const fetchProductsError = payload => ({ payload, type: FETCH_ALL_ERROR });\r\n\r\n/* reducer */\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case FETCH_ALL_START: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: true,\r\n          error: false,\r\n        },\r\n      };\r\n    }\r\n    case FETCH_ALL_SUCCESS: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: false,\r\n          error: false,\r\n        },\r\n        data: action.payload,\r\n      };\r\n    }\r\n    case FETCH_ALL_ERROR: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return statePart;\r\n  }\r\n}","import {combineReducers, createStore} from 'redux';\r\n\r\nimport productReducer from './productRedux';\r\n\r\n// define initial state and shallow-merge initial data\r\nconst initialState = {\r\n  products: {\r\n    loading: {\r\n      active: false,\r\n      error: false,\r\n    },\r\n    data: [],\r\n  },\r\n};\r\n\r\n// define reducers\r\nconst reducers = {\r\n  products: productReducer,\r\n};\r\n\r\n// add blank reducers for initial state properties without reducers\r\nObject.keys(initialState).forEach(item => {\r\n  if (typeof reducers[item] == 'undefined') {\r\n    reducers[item] = (statePart = null) => statePart;\r\n  }\r\n});\r\n\r\nconst combinedReducers = combineReducers(reducers);\r\n\r\n// create store\r\nconst store = createStore(\r\n  combinedReducers,\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","/* SELECTORS */\r\n\r\n\r\n/* ACTIONS */\r\n\r\n// action name creator\r\nconst reducerName = 'global';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n// action types\r\nexport const SET_MULTIPLE_STATES = createActionName('SET_MULTIPLE_STATES');\r\n\r\n// action creators\r\nexport const setMultipleStates = payload => ({ payload, type: SET_MULTIPLE_STATES });\r\n\r\n// reducer\r\nexport default function reducer(state = [], action = {}) {\r\n  switch (action.type) {\r\n    case SET_MULTIPLE_STATES: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport {NavLink, Link} from 'react-router-dom';\r\nimport styles from './Header.scss';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\n\r\nclass Header extends React.Component {\r\n  render(){\r\n    return (\r\n      <header className={styles.component}>\r\n        <Grid>\r\n          <Row between=\"md\" middle=\"xs\">\r\n            <Col md={3} lg={2}>\r\n              <Link to='/'>\r\n                <div className={styles.logo}>\r\n                  <span className={styles.name}>Pizza Portal Inside</span>\r\n                </div>\r\n              </Link>\r\n            </Col>\r\n            <Col md={6}>\r\n              <nav>\r\n                <NavLink to={`${process.env.PUBLIC_URL}/Login`} activeClassName='active'>Login</NavLink>\r\n                <NavLink to={`${process.env.PUBLIC_URL}/tables`} activeClassName='active'>Tables</NavLink>\r\n                <NavLink to={`${process.env.PUBLIC_URL}/tables/booking/:id`} activeClassName='active'>BookedTable</NavLink>\r\n                <NavLink to={`${process.env.PUBLIC_URL}/tables/event/:id`} activeClassName='active'>BookedEvent</NavLink>\r\n                <NavLink to={`${process.env.PUBLIC_URL}/ordering`} activeClassName='active'>OrderForm</NavLink>\r\n                <NavLink to={`${process.env.PUBLIC_URL}/ordering/new`} activeClassName='active'>CreateOrder</NavLink>\r\n                <NavLink to={`${process.env.PUBLIC_URL}/ordering/order/:id`} activeClassName='active'>TableOrder</NavLink>\r\n                <NavLink to={`${process.env.PUBLIC_URL}/kitchen`} activeClassName='active'>Kitchen</NavLink>\r\n              </nav>\r\n            </Col>\r\n            <Col md={3} lg={2}>\r\n              <div className={styles.contact}>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from '../Header/Header';\r\n\r\nconst MainLayout = ({children}) => (\r\n  <div>\r\n    <Header />\r\n    <main>\r\n      {children}\r\n    </main>\r\n  </div>\r\n);\r\n\r\nMainLayout.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n  render(){\r\n    return (\r\n      <div>\r\n        <h2>Home</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport styles from './Login.scss';\r\n\r\nclass Login extends React.Component {\r\n  Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n          Your Website\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  render(){\r\n    const classes = makeStyles((theme) => \r\n      ({\r\n        paper: {\r\n          marginTop: theme.spacing(8),\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        },\r\n        avatar: {\r\n          margin: theme.spacing(1),\r\n          backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n          width: '100%', // Fix IE 11 issue.\r\n          marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n          margin: theme.spacing(3, 0, 2),\r\n        },\r\n      }));\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <h2 className={styles.h2}>Login</h2>\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {'Do not have an account? Sign Up'};\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <this.Copyright />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nclass Tables extends React.Component {\r\n  render(){\r\n    const classes = makeStyles((theme) => ({\r\n      root: {\r\n        flexGrow: 1,\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n      },\r\n    }));\r\n    \r\n    return (\r\n      <Container component='main' maxWidth=\"xs\">\r\n        <h1>Tables</h1>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n              <Paper className={classes.paper}><Avatar>T1</Avatar> <br/>Order:</Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Paper className={classes.paper}><Avatar>T2</Avatar><br/>Order:</Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Paper className={classes.paper}><Avatar>T3</Avatar><br/>Order:</Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n              <Paper className={classes.paper}><Avatar>T4</Avatar><br/>Order:</Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Paper className={classes.paper}><Avatar>T5</Avatar><br/>Order:</Paper>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Paper className={classes.paper}><Avatar>T6</Avatar><br/>Order:</Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </div>  \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tables;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BookedTable extends React.Component {\r\n  render(){\r\n    return (\r\n      <div>\r\n        <h2>BookedTable</h2>\r\n        <h3>{this.props.match.params.id}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookedTable.propTypes = {\r\n  match:PropTypes.node,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default BookedTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nclass BookedEvent extends React.Component {\r\n  render(){\r\n    const classes = makeStyles((theme) => ({\r\n      root: {\r\n        flexGrow: 1,\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n      },\r\n    }));\r\n    \r\n    const Event = {\r\n      data: '23/03/2021',\r\n      People: '12',\r\n      Appetizers: 'Chipps, Crackers, SaltySticks',\r\n      MainDish: 'Fries*4, MiniSadwich*4, ChickenStrips*4',\r\n      Beverages: 'Coca-cola*mix, Water, Juice*mix',\r\n      Alkohol: 'Seperate Bill',\r\n    };\r\n    return (\r\n      <Container component='main' maxWidth=\"xs\">\r\n        <h2>BookedEvent</h2>\r\n        <h3>{this.props.match.params.id}</h3>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <Paper className={classes.paper}>\r\n              {JSON.stringify(Event)}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nBookedEvent.propTypes = {\r\n  match: PropTypes.node,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default BookedEvent;\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nclass OrderForm extends React.Component {\r\n  render(){\r\n    const classes = makeStyles((theme) => ({\r\n      formControl: {\r\n        margin: theme.spacing(6),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(4),\r\n      },\r\n    }));\r\n    \r\n    return(\r\n      <Container componnet='main' maxWidth='xs'  >\r\n        <h1>OrderForm</h1>\r\n        <Container>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"tableSelect\">Select Table</InputLabel>\r\n            <Select\r\n              id=\"tableSelector\"\r\n            //value={1}\r\n            //onChange={console.log(this)}\r\n            >\r\n              <MenuItem value=\"\"></MenuItem>\r\n              <MenuItem value={1}>Table 1</MenuItem>\r\n              <MenuItem value={2}>Table 2</MenuItem>\r\n              <MenuItem value={3}>Table 3</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Container>\r\n\r\n        <Container>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"Appetizer\">Appetizer</InputLabel>\r\n            <Select\r\n              id=\"tableSelector\"\r\n            //value={1}\r\n            //onChange={console.log(this)}\r\n            >\r\n              <MenuItem value=\"\">\r\n              </MenuItem>\r\n              <MenuItem value='chips'>Chips</MenuItem>\r\n              <MenuItem value='crachers'>Crackers</MenuItem>\r\n              <MenuItem value='cStrips'>Chicken Strips</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"AppetizerBeverage\">Beverage</InputLabel>\r\n            <Select\r\n              id=\"tableSelector\"\r\n              //value={1}\r\n              //onChange={console.log(this)}\r\n            >\r\n              <MenuItem value=\"\">\r\n              </MenuItem>\r\n              <MenuItem value='Cola'>CocaCola</MenuItem>\r\n              <MenuItem value='water'>Water</MenuItem>\r\n              <MenuItem value='beer'>Beer</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Container>  \r\n        <Container>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"Main\">Main Dish</InputLabel>\r\n            <Select\r\n              id=\"tableSelector\"\r\n            //value={1}\r\n            //onChange={console.log(this)}\r\n            >\r\n              <MenuItem value=\"\">\r\n              </MenuItem>\r\n              <MenuItem value='salad'>Salad</MenuItem>\r\n              <MenuItem value='chicken'>Chicken</MenuItem>\r\n              <MenuItem value='fish'>Fish</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"MainBeverage\">Beverage</InputLabel>\r\n            <Select\r\n              id=\"tableSelector\"\r\n            //value={1}\r\n            //onChange={console.log(this)}\r\n            >\r\n              <MenuItem value=\"\">\r\n              </MenuItem>\r\n              <MenuItem value='Cola'>CocaCola</MenuItem>\r\n              <MenuItem value='water'>Water</MenuItem>\r\n              <MenuItem value='beer'>Beer</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Container>\r\n        <Button id='OrderFormSave' variant='contained' color='primary'>Send Order</Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderForm;\r\n","import React from 'react';\r\n\r\nclass CreateOrder extends React.Component {\r\n  render(){\r\n    return (\r\n      <div>CreateOrder</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateOrder;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TableOrder extends React.Component {\r\n  render(){\r\n    return (\r\n      <div>\r\n        <h2>TableOrder</h2>\r\n        <h3>{this.props.match.params.id}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTableOrder.propTypes = {\r\n  match: PropTypes.node,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default TableOrder;\r\n","import React from 'react';\r\n\r\nclass Kitchen extends React.Component {\r\n  render(){\r\n    return (\r\n      <div>Kitchen</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Kitchen;\r\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\nimport Home from './components/views/Home/Home';\nimport Login from './components/views/Login/Login';\nimport Tables from './components/views/Tables/Tables';\nimport BookedTable from './components/views/BookedTable/BookedTable';\nimport BookedEvent from './components/views/BookedEvent/BookedEvent';\nimport OrderForm from './components/views/OrderForm/OrderForm';\nimport CreateOrder from './components/views/CreateOrder/CreateOrder';\nimport TableOrder from './components/views/TableOrder/TableOrder';\nimport Kitchen from './components/views/Kitchen/Kitchen';\nimport {setMultipleStates} from './redux/globalRedux';\n\n\nclass App extends React.Component {\n  static propTypes = {\n    setStates: PropTypes.func,\n  }\n  \n  render(){\n    return (\n      <BrowserRouter>\n        <MainLayout>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={Home} />\n            {/*liczba zrealizowanych oraz wszystkich dzisiejszych zamówień zdalnych,\n                  liczba zrealizowanych oraz wszystkich dzisiejszych zamówień lokalnych,\n                  liczba wszystkich dzisiejszych rezerwacji,\n                  liczba wszystkich dzisiejszych eventów, */}\n\n            <Route exact path={`${process.env.PUBLIC_URL}/login`} component={Login} />\n            {/* zawiera pola na nazwę użytkownika i hasło (brak funkcjonalności),\n                      zawiera również guzik będący linkiem do strony głównej /,*/}\n\n            <Route exact path={`${process.env.PUBLIC_URL}/tables`} component={Tables} />\n            {/* ten widok wygląda jak tabela (ale może być wygodniej nie robić go za pomocą <table>),\n                  każdy stolik to jedna kolumna,\n                  każdy wiersz to okres 30 minut,\n                  wszystkie rezerwacje i eventy są naniesione na tę tabelę w odpowiednim miejscu,\n                  w efekcie osiągniemy widok podobny do Kalendarza Google w widoku tygodniowym (ale kolumnami będą stoliki zamiast kolejnych dni),\n                  po kliknięciu rezerwacji lub eventu, szczegóły pojawiają się na osobnej stronie,*/}\n\n            <Route exact path={`${process.env.PUBLIC_URL}/tables/booking/:id`}component={BookedTable} />\n            {/*widok pojedynczej rezerwacji:\n              zawiera wszystkie szczegóły tej rezerwacji (data, godzina, stolik, liczba osób, etc.),\n              umożliwia edycję każdego parametru rezerwacji,*/}\n            \n            <Route exact path={`${process.env.PUBLIC_URL}/tables/event/:id`} component={BookedEvent} />\n            {/* widok pojedynczego eventu:\n              analogiczny do widoku pojedynczej rezerwacji, może nawet korzystać z tego samego komponentu,*/}\n\n            <Route exact path={`${process.env.PUBLIC_URL}/ordering`} component={OrderForm} />\n            {/* widok kelnera:\n              zawiera listę stolików,\n              dla każdego stolika musi być guzik nowego zamówienia,\n              dla każdego stolika wyświetla listę aktywnych zamówień (czyli o statusie innym niż done lub cancelled),\n              na liście aktywnych zamówień wyświetlamy tylko podsumowanie zamówienia, czyli np. status, datę stworzenia i sumę zamówienia,\n              zamówienia ze statusem ready muszą być wyszczególnione, np. za pomocą koloru tła, oraz wyświetlać guzik do szybkiej zmiany statusu na delivered,\n              po kliknięciu w zamówienie otwiera się widok pojedynczego zamówienia /ordering/:id,*/}\n\n            <Route exact path={`${process.env.PUBLIC_URL}/ordering/new`} component={CreateOrder} />\n            {/*widok składania zamówienia:\n            zawiera edytowalne informacje o zamówieniu, czyli datę stworzenia zamówienia oraz numer stolika,\n            data zamówienia domyślnie wyświetla się bieżąca,\n            numer stolika jest automatycznie wypełniony, tylko jeśli użytkownik wszedł na tę stronę za pomocą guzika w widoku /ordering,\n            widok zawiera menu, czyli listę produktów z ich opcjami oraz polem na notatki,\n            widok zawiera koszyk, czyli listę zamówionych produktów, które można usuwać, tylko jeśli zamówienie ma status ordered,\n            koszyk musi podliczać ceny zamówionych produktów, */}\n\n            <Route exact path={`${process.env.PUBLIC_URL}/ordering/order/:id`} component={TableOrder} />\n            {/* widok pojedynczego zamówienia:\n            wyświetla wszystkie informacje o zamówieniu,\n            jeśli zamówienie ma status new, działa identycznie jak widok /ordering/new\n            przy każdym innym statusie nie będzie zawierał menu produktów, a z koszyka nie będzie można usuwać produktów,*/}\n\n            <Route exact path={`${process.env.PUBLIC_URL}/kitchen`} component={Kitchen} />\n            {/*widok kuchni:\n            wyświetla dwie kolumny – z listą zamówień lokalnych oraz z dostawą,\n            zamówienia są posortowane wedle daty złożenia zamówienia,\n            zamówienie wyświetla wszystkie informacje (oprócz cen), a przede wszystkim produkty z opcjami i notatkami. */}\n          </Switch>\n        </MainLayout>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = () => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setStates: newState => dispatch(setMultipleStates(newState)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import './styles/global.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('app'),\n);\n"],"sourceRoot":""}